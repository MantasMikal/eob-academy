@import '../../../styles/media-queries.css';
@import '../../../styles/vars.css';
@import '_backline-mixins';
@import 'setting';

.Root {
  position: relative;
  z-index: 100;
  background-color: $color-primary-white;
  color: $color-primary-black;
}

.Wrapper {
  box-sizing: border-box;
  margin: 0 auto;
  // max-width: 960px;
  padding: spacing(1) spacing(2);
  display: flex;
  background-color: inherit;
  @include mq($breakpoint-mobileLandscape) {
    padding: spacing(1) spacing(2);
  }
}

.Branding {
  font-size: inherit;
  margin: 0;
  flex: 1;

  & a {
    display: inline-block;
  }
}

.Logo {
  display: inline-flex;
  transition: $duration-short $easing-standard;
  svg {
    transition: $duration-short $easing-standard;
    &:hover {
      transform: scale(1.2);
      transition: $duration-short $easing-standard;
    }
  }
}

.ToggleNavButton {
  appearance: none; 
  outline: none;
  display: inherit;

  & svg {
    display: block;
  }

  &:hover {
    & svg path {
      fill: $color-primary-red;
    }
  }

  @include mq($breakpoint-mobileLandscape) {
    display: none;
  }
}

.Nav {
  display: none;
  background-color: inherit;

  & ul {
    margin: 0;
    padding: 0;
  }

  & ul li a {
    display: block;
    color: inherit;
    text-decoration: none;
  }

  @media (hover: hover) {
    & ul li a:hover {
      text-decoration: underline;
    }
  }

  @include mq(null, $breakpoint-mobileLandscape) {
    position: absolute;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    left: 0;
    right: 0;
    top: spacing(6);

    & ul {
      padding: 1rem 0;
    }

    & ul li a {
      padding: 0.5rem 1.5rem;
    }
  }

  @include mq($breakpoint-mobileLandscape) {
    display: block;

    & ul {
      list-style: none;
      display: flex;
      justify-content: flex-end;
    }

    & ul li a {
      padding: 0.5rem;
    }
  }
}

// TODO:
// Fix focus and active styles

.DarkModeToggle {
  margin-left: spacing(2);

  &:focus,
  &:active {
    outline: 0;
  }

  svg path {
    transition: $easing-standard $duration-short;
  }

  &:hover {
    .Sun svg path {
      transition: $easing-standard $duration-short;
      fill: $color-primary-yellow;
    }

    .Moon svg path {
      
      fill: $color-primary-black;
    }

    .Moon svg path {
      transition: $easing-standard $duration-short;
    }
  }
}

.showNav {
  display: block;
}

.highlight {
  color: $color-primary-purple;
}

.isDark {
  &.Root {
    background-color: $color-primary-black;
    color: $color-primary-white;
  }
}
