$color-common-black: hsl(0, 0%, 0%);
$color-common-grey25: hsl(0, 0%, 25%);
$color-common-grey50: hsl(0, 0%, 50%);
$color-common-grey75: hsl(0, 0%, 75%);
$color-common-grey95: hsl(0, 0%, 95%);
$color-common-white: hsl(0, 0%, 100%);

$color-primary-black: #1e1e1e;
$color-primary-white: #ffffff;
$color-primary-purple: #c8167c;
$color-primary-red: #e72568;
$color-primary-yellow: #fbc87c;

$color-primary-base: #1565c0;
$color-primary-light: #1976d2;
$color-primary-dark: #0d47a1;

$color-status-success: #33691e;
$color-status-notice: #01579b;
$color-status-warning: #ff6f00;
$color-status-error: #b71c1c;

$color-status-list: (
  success: $color-status-success,
  notice: $color-status-notice,
  warning: $color-status-warning,
  error: $color-status-error
);

$themes: (
  default: (
    bg: $color-primary-white,
    text: $color-primary-black,
    text-secondary: $color-primary-black,
    link: $color-primary-yellow,
    hover: $color-primary-purple
  ),
  dark: (
    text: $color-primary-white,
    text-secondary: $color-primary-white,
    link: $color-primary-yellow,
    hover: $color-primary-purple
  )
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}